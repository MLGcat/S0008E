# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.15

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /var/lib/snapd/snap/cmake/89/bin/cmake

# The command to remove a file.
RM = /var/lib/snapd/snap/cmake/89/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/var/lib/snapd/snap/cmake/89/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/var/lib/snapd/snap/cmake/89/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build/CMakeFiles /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build/code/CMakeFiles/progress.marks
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f CMakeFiles/Makefile2 code/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f CMakeFiles/Makefile2 code/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f CMakeFiles/Makefile2 code/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f CMakeFiles/Makefile2 code/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
code/CMakeFiles/code.dir/rule:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f CMakeFiles/Makefile2 code/CMakeFiles/code.dir/rule
.PHONY : code/CMakeFiles/code.dir/rule

# Convenience name for target.
code: code/CMakeFiles/code.dir/rule

.PHONY : code

# fast build rule for target.
code/fast:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/build
.PHONY : code/fast

Math4D.o: Math4D.cpp.o

.PHONY : Math4D.o

# target to build an object file
Math4D.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/Math4D.cpp.o
.PHONY : Math4D.cpp.o

Math4D.i: Math4D.cpp.i

.PHONY : Math4D.i

# target to preprocess a source file
Math4D.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/Math4D.cpp.i
.PHONY : Math4D.cpp.i

Math4D.s: Math4D.cpp.s

.PHONY : Math4D.s

# target to generate assembly for a file
Math4D.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/Math4D.cpp.s
.PHONY : Math4D.cpp.s

camera.o: camera.cpp.o

.PHONY : camera.o

# target to build an object file
camera.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/camera.cpp.o
.PHONY : camera.cpp.o

camera.i: camera.cpp.i

.PHONY : camera.i

# target to preprocess a source file
camera.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/camera.cpp.i
.PHONY : camera.cpp.i

camera.s: camera.cpp.s

.PHONY : camera.s

# target to generate assembly for a file
camera.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/camera.cpp.s
.PHONY : camera.cpp.s

exampleapp.o: exampleapp.cpp.o

.PHONY : exampleapp.o

# target to build an object file
exampleapp.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/exampleapp.cpp.o
.PHONY : exampleapp.cpp.o

exampleapp.i: exampleapp.cpp.i

.PHONY : exampleapp.i

# target to preprocess a source file
exampleapp.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/exampleapp.cpp.i
.PHONY : exampleapp.cpp.i

exampleapp.s: exampleapp.cpp.s

.PHONY : exampleapp.s

# target to generate assembly for a file
exampleapp.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/exampleapp.cpp.s
.PHONY : exampleapp.cpp.s

graphicsNode.o: graphicsNode.cpp.o

.PHONY : graphicsNode.o

# target to build an object file
graphicsNode.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/graphicsNode.cpp.o
.PHONY : graphicsNode.cpp.o

graphicsNode.i: graphicsNode.cpp.i

.PHONY : graphicsNode.i

# target to preprocess a source file
graphicsNode.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/graphicsNode.cpp.i
.PHONY : graphicsNode.cpp.i

graphicsNode.s: graphicsNode.cpp.s

.PHONY : graphicsNode.s

# target to generate assembly for a file
graphicsNode.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/graphicsNode.cpp.s
.PHONY : graphicsNode.cpp.s

lightNode.o: lightNode.cpp.o

.PHONY : lightNode.o

# target to build an object file
lightNode.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/lightNode.cpp.o
.PHONY : lightNode.cpp.o

lightNode.i: lightNode.cpp.i

.PHONY : lightNode.i

# target to preprocess a source file
lightNode.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/lightNode.cpp.i
.PHONY : lightNode.cpp.i

lightNode.s: lightNode.cpp.s

.PHONY : lightNode.s

# target to generate assembly for a file
lightNode.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/lightNode.cpp.s
.PHONY : lightNode.cpp.s

main.o: main.cpp.o

.PHONY : main.o

# target to build an object file
main.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/main.cpp.o
.PHONY : main.cpp.o

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/main.cpp.s
.PHONY : main.cpp.s

mesh.o: mesh.cpp.o

.PHONY : mesh.o

# target to build an object file
mesh.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/mesh.cpp.o
.PHONY : mesh.cpp.o

mesh.i: mesh.cpp.i

.PHONY : mesh.i

# target to preprocess a source file
mesh.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/mesh.cpp.i
.PHONY : mesh.cpp.i

mesh.s: mesh.cpp.s

.PHONY : mesh.s

# target to generate assembly for a file
mesh.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/mesh.cpp.s
.PHONY : mesh.cpp.s

scene.o: scene.cpp.o

.PHONY : scene.o

# target to build an object file
scene.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/scene.cpp.o
.PHONY : scene.cpp.o

scene.i: scene.cpp.i

.PHONY : scene.i

# target to preprocess a source file
scene.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/scene.cpp.i
.PHONY : scene.cpp.i

scene.s: scene.cpp.s

.PHONY : scene.s

# target to generate assembly for a file
scene.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/scene.cpp.s
.PHONY : scene.cpp.s

shaderResource.o: shaderResource.cpp.o

.PHONY : shaderResource.o

# target to build an object file
shaderResource.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/shaderResource.cpp.o
.PHONY : shaderResource.cpp.o

shaderResource.i: shaderResource.cpp.i

.PHONY : shaderResource.i

# target to preprocess a source file
shaderResource.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/shaderResource.cpp.i
.PHONY : shaderResource.cpp.i

shaderResource.s: shaderResource.cpp.s

.PHONY : shaderResource.s

# target to generate assembly for a file
shaderResource.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/shaderResource.cpp.s
.PHONY : shaderResource.cpp.s

skeleton.o: skeleton.cpp.o

.PHONY : skeleton.o

# target to build an object file
skeleton.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/skeleton.cpp.o
.PHONY : skeleton.cpp.o

skeleton.i: skeleton.cpp.i

.PHONY : skeleton.i

# target to preprocess a source file
skeleton.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/skeleton.cpp.i
.PHONY : skeleton.cpp.i

skeleton.s: skeleton.cpp.s

.PHONY : skeleton.s

# target to generate assembly for a file
skeleton.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/skeleton.cpp.s
.PHONY : skeleton.cpp.s

textureResource.o: textureResource.cpp.o

.PHONY : textureResource.o

# target to build an object file
textureResource.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/textureResource.cpp.o
.PHONY : textureResource.cpp.o

textureResource.i: textureResource.cpp.i

.PHONY : textureResource.i

# target to preprocess a source file
textureResource.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/textureResource.cpp.i
.PHONY : textureResource.cpp.i

textureResource.s: textureResource.cpp.s

.PHONY : textureResource.s

# target to generate assembly for a file
textureResource.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/textureResource.cpp.s
.PHONY : textureResource.cpp.s

tinystr.o: tinystr.cpp.o

.PHONY : tinystr.o

# target to build an object file
tinystr.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinystr.cpp.o
.PHONY : tinystr.cpp.o

tinystr.i: tinystr.cpp.i

.PHONY : tinystr.i

# target to preprocess a source file
tinystr.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinystr.cpp.i
.PHONY : tinystr.cpp.i

tinystr.s: tinystr.cpp.s

.PHONY : tinystr.s

# target to generate assembly for a file
tinystr.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinystr.cpp.s
.PHONY : tinystr.cpp.s

tinyxml.o: tinyxml.cpp.o

.PHONY : tinyxml.o

# target to build an object file
tinyxml.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxml.cpp.o
.PHONY : tinyxml.cpp.o

tinyxml.i: tinyxml.cpp.i

.PHONY : tinyxml.i

# target to preprocess a source file
tinyxml.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxml.cpp.i
.PHONY : tinyxml.cpp.i

tinyxml.s: tinyxml.cpp.s

.PHONY : tinyxml.s

# target to generate assembly for a file
tinyxml.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxml.cpp.s
.PHONY : tinyxml.cpp.s

tinyxmlerror.o: tinyxmlerror.cpp.o

.PHONY : tinyxmlerror.o

# target to build an object file
tinyxmlerror.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlerror.cpp.o
.PHONY : tinyxmlerror.cpp.o

tinyxmlerror.i: tinyxmlerror.cpp.i

.PHONY : tinyxmlerror.i

# target to preprocess a source file
tinyxmlerror.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlerror.cpp.i
.PHONY : tinyxmlerror.cpp.i

tinyxmlerror.s: tinyxmlerror.cpp.s

.PHONY : tinyxmlerror.s

# target to generate assembly for a file
tinyxmlerror.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlerror.cpp.s
.PHONY : tinyxmlerror.cpp.s

tinyxmlparser.o: tinyxmlparser.cpp.o

.PHONY : tinyxmlparser.o

# target to build an object file
tinyxmlparser.cpp.o:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlparser.cpp.o
.PHONY : tinyxmlparser.cpp.o

tinyxmlparser.i: tinyxmlparser.cpp.i

.PHONY : tinyxmlparser.i

# target to preprocess a source file
tinyxmlparser.cpp.i:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlparser.cpp.i
.PHONY : tinyxmlparser.cpp.i

tinyxmlparser.s: tinyxmlparser.cpp.s

.PHONY : tinyxmlparser.s

# target to generate assembly for a file
tinyxmlparser.cpp.s:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(MAKE) -f code/CMakeFiles/code.dir/build.make code/CMakeFiles/code.dir/tinyxmlparser.cpp.s
.PHONY : tinyxmlparser.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... code"
	@echo "... edit_cache"
	@echo "... Math4D.o"
	@echo "... Math4D.i"
	@echo "... Math4D.s"
	@echo "... camera.o"
	@echo "... camera.i"
	@echo "... camera.s"
	@echo "... exampleapp.o"
	@echo "... exampleapp.i"
	@echo "... exampleapp.s"
	@echo "... graphicsNode.o"
	@echo "... graphicsNode.i"
	@echo "... graphicsNode.s"
	@echo "... lightNode.o"
	@echo "... lightNode.i"
	@echo "... lightNode.s"
	@echo "... main.o"
	@echo "... main.i"
	@echo "... main.s"
	@echo "... mesh.o"
	@echo "... mesh.i"
	@echo "... mesh.s"
	@echo "... scene.o"
	@echo "... scene.i"
	@echo "... scene.s"
	@echo "... shaderResource.o"
	@echo "... shaderResource.i"
	@echo "... shaderResource.s"
	@echo "... skeleton.o"
	@echo "... skeleton.i"
	@echo "... skeleton.s"
	@echo "... textureResource.o"
	@echo "... textureResource.i"
	@echo "... textureResource.s"
	@echo "... tinystr.o"
	@echo "... tinystr.i"
	@echo "... tinystr.s"
	@echo "... tinyxml.o"
	@echo "... tinyxml.i"
	@echo "... tinyxml.s"
	@echo "... tinyxmlerror.o"
	@echo "... tinyxmlerror.i"
	@echo "... tinyxmlerror.s"
	@echo "... tinyxmlparser.o"
	@echo "... tinyxmlparser.i"
	@echo "... tinyxmlparser.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/ludfra-7/git/gitlab/Grafikprogrammering/Skeleton/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

