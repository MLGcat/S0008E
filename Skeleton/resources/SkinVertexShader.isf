#version 430

layout(location=0) in vec3 pos;
layout(location=1) in vec3 normalN;
layout(location=2) in vec2 uv;
layout(location=3) in float tangent;
layout(location=4) in float biNormalN;
layout(location=5) in vec4 SkinWeights;
layout(location=6) in vec4 skinIndiciesN;

layout(location=0) out vec2 Uv;
layout(location=1) out vec3 Norm;
layout(location=2) out vec3 FragPos;

uniform mat4 m;
uniform mat4 v;
uniform mat4 p;

uniform uint boneCount;
uniform mat4 bones[99];

void main()
{
    mat4 boneTransforms = bones[int(skinIndiciesN.x)]*SkinWeights.x + bones[int(skinIndiciesN.y)]*SkinWeights.y + bones[int(skinIndiciesN.z)]*SkinWeights.z + bones[int(skinIndiciesN.w)]*SkinWeights.w;
	mat4 mvp = p*v*boneTransforms;
	gl_Position = mvp * vec4(pos,1);
	Uv=vec2(uv.x, 1-uv.y);
	Norm = mat3(transpose(inverse(m))) * normalN;
	FragPos = (m*vec4(pos,1)).xyz;
}
